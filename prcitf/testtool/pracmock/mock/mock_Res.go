// Code generated by MockGen. DO NOT EDIT.
// Source: pracmock (interfaces: Res)

// Package mock_pracmock is a generated GoMock package.
package mock

import (
gomock "github.com/golang/mock/gomock"
reflect "reflect"
)

// MockRes is a mock of Res interface
type MockRes struct {
	ctrl     *gomock.Controller
	recorder *MockResMockRecorder
}

// MockResMockRecorder is the mock recorder for MockRes
type MockResMockRecorder struct {
	mock *MockRes
}

// NewMockRes creates a new mock instance
func NewMockRes(ctrl *gomock.Controller) *MockRes {
	mock := &MockRes{ctrl: ctrl}
	mock.recorder = &MockResMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRes) EXPECT() *MockResMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockRes) Create(arg0 string, arg1 []byte) error {
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockResMockRecorder) Create(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockRes)(nil).Create), arg0, arg1)
}

// Delete mocks base method
func (m *MockRes) Delete(arg0 string) error {
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockResMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockRes)(nil).Delete), arg0)
}

// Retrieve mocks base method
func (m *MockRes) Retrieve(arg0 string) ([]byte, error) {
	ret := m.ctrl.Call(m, "Retrieve", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Retrieve indicates an expected call of Retrieve
func (mr *MockResMockRecorder) Retrieve(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Retrieve", reflect.TypeOf((*MockRes)(nil).Retrieve), arg0)
}

// Update mocks base method
func (m *MockRes) Update(arg0 string, arg1 []byte) error {
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Update indicates an expected call of Update
func (mr *MockResMockRecorder) Update(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockRes)(nil).Update), arg0, arg1)
}

